<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Module::Runtime | The Musings of a Dyslexic Technologist]]></title>
  <link href="http://kevindawson.github.io/bowtie/categories/module-runtime/atom.xml" rel="self"/>
  <link href="http://kevindawson.github.io/bowtie/"/>
  <updated>2014-04-08T20:54:51+01:00</updated>
  <id>http://kevindawson.github.io/bowtie/</id>
  <author>
    <name><![CDATA[bowtie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Announcing App::Midgen v0.32]]></title>
    <link href="http://kevindawson.github.io/bowtie/2014/03/29/app-midgen-011/"/>
    <updated>2014-03-29T14:40:00+00:00</updated>
    <id>http://kevindawson.github.io/bowtie/2014/03/29/app-midgen-011</id>
    <content type="html"><![CDATA[<h2>So whatâ€™s new?</h2>

<ul>
<li>Follow the meta-2 phase-requirements naming.</li>
<li>The ablity to recast phase-requirements.</li>
</ul>


<h3>Plus theres more</h3>

<ul>
<li>App::Midgen v0.30 which was a refactor to support Perl 5.8.x</li>
</ul>


<p>A Couple of other blogs that now make sense to share with you</p>

<ul>
<li><a href="/2014/02/16/app-midgen-009/">midgen 0.28 plus</a>

<ul>
<li>Flowchart showing logic for RuntimeRecommends</li>
<li>An enhancement to output infile to include Installed files</li>
</ul>
</li>
<li><a href="/2014/03/22/app-midgen-010/">mro &ndash; MRO::Compat catch</a>

<ul>
<li><a href="https://github.com/kevindawson/App-Midgen/issues/6">issue #6</a>.</li>
<li>The Catch</li>
</ul>
</li>
</ul>


<!-- more -->


<p><em>Food for thought, if we update our Modules, don&rsquo;t we want our users to use the current version, so should we not by default do the same with others Modules. Thus we always show the current version number, regardless.</em></p>

<h3>Follow the meta-2 phase-requirements naming.</h3>

<p>All internals now follow the meta-2 phase-requirements naming as and where applicable for clarity. This rewrite has enabled midgen to do more as it now collates more info as it scans a dist.</p>

<p>The following table is here as a reminder only.</p>

<div>
  <style>
     table {
        border: 2px solid black;
        font-size: 90%;             
      }
      table th {
        font-weight: bold;
        background-color: gray;
        text-align: center;
        border: 2px solid black;
      }
      table th,td {
        padding: 4px 5px;
                border: 1px solid black;
      }
  </style>
</div>




<table>
    <tr>
        <th>Meta-2</th>
        <th>Meta-1.x</th>
    </tr>
  <tr>
    <td>RuntimeRequires</td>
    <td>requires</td>
  </tr>
  <tr>
    <td>RuntimeRecommends</td>
    <td>recommends</td>
  </tr>
  <tr>
    <td>TestRequires</td>
    <td>test_requires</td>
  </tr>
  <tr>
    <td>TestSuggests</td>
    <td>recommends</td>
  </tr>
  <tr>
    <td>DevelopeRequires</td>
    <td>recommends</td>
  </tr>
</table>


<p></p></p>

<h3>Now some examples</h3>

<p>The following data snippets show the use of the phase-requirements being stored by each scanner that finds a match.</p>

<ul>
<li>Infiles shows the following

<ul>
<li>file found in</li>
<li>version found by scanner ( use Module::Name 1.01 (); )</li>
<li>scanner that found it</li>
<li>phase being checked</li>
</ul>
</li>
</ul>


<h4>a core module</h4>

<p>{% codeblock Core Module &ndash; Errno lang:perl %}</p>

<pre><code>Errno                       {
    corelist   1,
    count      1,
    infiles    [
        [0] [
            [0] "/lib/HTTP/Tiny.pm",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "RuntimeRequires"
        ]
    ],
    prereqs    "RuntimeRequires"
},
</code></pre>

<p>{% endcodeblock %}
nb. no version number shown as part of perl</p>

<h4>a dual-life module</h4>

<p>{% codeblock dual-life Module &ndash; Compress::Zlib lang:perl %}</p>

<pre><code>Compress::Zlib              {
    corelist       1,
    count          1,
    distribution   "IO-Compress",
    dual_life      1,
    infiles        [
        [0] [
            [0] "/lib/inc/Module/Install.pm",
            [1] 0,
            [2] "App::Midgen::Role::Eval",
            [3] "RuntimeRecommends"
        ]
    ],
    prereqs        "RuntimeRecommends",
    version        2.064
},
</code></pre>

<p>{% endcodeblock %}
nb. distribution module found is is shown also.</p>

<h4>a module</h4>

<p>{% codeblock Module IO::Socket::SSL lang:perl %}</p>

<pre><code>IO::Socket::SSL             {
    corelist   0,
    count      3,
    infiles    [
        [0] [
            [0] "/lib/HTTP/Tiny.pm",
            [1] 0,
            [2] "App::Midgen::Role::Eval",
            [3] "RuntimeRecommends"
        ],
        [1] [
            [0] "/lib/HTTP/Tiny.pm",
            [1] 1.42,
            [2] "Perl::PrereqScanner",
            [3] "RuntimeRequires"
        ],
        [2] [
            [0] "t/210_live_ssl.t",
            [1] 1.56,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ]
    ],
    prereqs    "RuntimeRecommends",
    version    1.979
},
</code></pre>

<p>{% endcodeblock %}
nb. due to the order they run in RuntimeRecommends takes precedent in the following example.</p>

<p><code>App::Midgen::Role::Eval</code> is an on-going development so dose not always manage to extract version, as identifying is the higher priority in the first instance.</p>

<p>If you want to see all the modules found use verbose output <code>midgen -v</code></p>

<p>Suggest you consider redirecting STDERR which will take advantage of Data-Printer output.
<code>perl
ANSI_COLORS_DISABLED=1 midgen -v 2&gt;data.txt
</code></p>

<h3>The ablity to recast phase-requirements</h3>

<p>What the F### you say is that and why do we need it!</p>

<p>{% codeblock Can you spot the error lang:perl %}</p>

<pre><code>YAML::Tiny                  {
    corelist   0,
    count      8,
    infiles    [
        [0] [
            [0] "/lib/Module/Install/Metadata.pm",
            [1] 0,
            [2] "App::Midgen::Role::Eval",
            [3] "RuntimeRecommends"
        ],
        [1] [
            [0] "/lib/Module/Install/Metadata.pm",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "RuntimeRequires"
        ],
        [2] [
            [0] "/lib/Module/Install/Admin/Metadata.pm",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "RuntimeRequires"
        ],
        [3] [
            [0] "/lib/inc/Module/Install.pm",
            [1] 0,
            [2] "App::Midgen::Role::Eval",
            [3] "RuntimeRecommends"
        ],
        [4] [
            [0] "t/27_build_requires_and_include.t",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ],
        [5] [
            [0] "t/30_build_subdirs.t",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ],
        [6] [
            [0] "t/31_add_metadata.t",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ],
        [7] [
            [0] "t/10_test.t",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ]
    ],
    prereqs    "RuntimeRecommends",
    version    1.62
}
</code></pre>

<p>{% endcodeblock %}</p>

<ul>
<li>look at the infile sections

<ul>
<li>ignore 4-7 as they are t/</li>
<li>0-1 resolves to 0</li>
</ul>
</li>
</ul>


<p>so we end up with</p>

<ul>
<li>0 &ndash; RuntimeRecommends ( /lib/Module/Install/Metadata.pm )</li>
<li>2 &ndash; RuntimeRequires ( /lib/Module/Install/Admin/Metadata.pm )</li>
<li>3 &ndash; RuntimeRecommends ( /lib/inc/Module/Install.pm )</li>
</ul>


<p>thus YAML::Tiny in this case should be RuntimeRequires</p>

<h4>re-cast RuntimeRecommends &ndash;> RuntimeRequires</h4>

<p>So added a huristic catch, which barfs a warning, and corrects the error by redefining <code>prereqs</code></p>

<ul>
<li>ignore t/</li>
<li>ignore Perl::PrereqScanner scans if a previous exists for the same file</li>
<li>if no previous re-cast to RuntimeRequires</li>
</ul>


<p>As 2 &ndash; is from /lib/Module/Install/Admin/Metadata.pm it needs to be re-cast to RuntimeRequires</p>

<p><code>Info: re-cast module YAML::Tiny to RuntimeRequires</code></p>

<p>{% codeblock Showing recast prereqs => RuntimeRequires lang:perl %}</p>

<pre><code>YAML::Tiny                  {
    corelist   0,
    count      8,
    infiles    [
        [0] [
            [0] "/lib/Module/Install/Metadata.pm",
            [1] 0,
            [2] "App::Midgen::Role::Eval",
            [3] "RuntimeRecommends"
        ],
        [1] [
            [0] "/lib/Module/Install/Metadata.pm",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "RuntimeRequires"
        ],
        [2] [
            [0] "/lib/Module/Install/Admin/Metadata.pm",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "RuntimeRequires"
        ],
        [3] [
            [0] "/lib/inc/Module/Install.pm",
            [1] 0,
            [2] "App::Midgen::Role::Eval",
            [3] "RuntimeRecommends"
        ],
        [4] [
            [0] "t/27_build_requires_and_include.t",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ],
        [5] [
            [0] "t/30_build_subdirs.t",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ],
        [6] [
            [0] "t/31_add_metadata.t",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ],
        [7] [
            [0] "t/10_test.t",
            [1] 0,
            [2] "Perl::PrereqScanner",
            [3] "TestRequires"
        ]
    ],
    prereqs    "RuntimeRequires",
    version    1.62
}
</code></pre>

<p>{% endcodeblock %}
This issues was found whilst doing some reviews on Module::Install now it is under the #toolchain.</p>

<h3>re-cast to TestRequires</h3>

<p>Plus there is also a re-cast to TestRequires from TestSuggests.</p>

<p>works in a similarly way :)</p>

<p><code>__END__</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing App::Midgen v0.28]]></title>
    <link href="http://kevindawson.github.io/bowtie/2014/02/08/app-midgen-008/"/>
    <updated>2014-02-08T14:40:00+00:00</updated>
    <id>http://kevindawson.github.io/bowtie/2014/02/08/app-midgen-008</id>
    <content type="html"><![CDATA[<h2>So whatâ€™s new?</h2>

<ul>
<li>Now with support for <code>prereqs-&gt;runtime-&gt;recommends</code> Meta-CPAN-spec v2</li>
<li>Internal scanner update and why

<ul>
<li>New scanner <strong>UseModule</strong>, Module::Runtime support</li>
<li>Scanner <strong>Eval</strong> now supports <strong>try</strong> Blocks as well.</li>
<li>Internal scanners now provide version strings, used by <strong>infile</strong>, output format</li>
</ul>
</li>
<li>Changes to the output formats:

<ul>
<li>Output format, <strong>eumm</strong>, added for ExtUtils::MakeMaker (enabling &ndash;> META.json)</li>
<li>Updates to <strong>metacpan</strong> &amp;&amp; <strong>cpanfile</strong> to show <code>prereqs-&gt;runtime-&gt;recommends</code></li>
</ul>
</li>
</ul>


<!-- more -->


<p><em>Food for thought, if we update our Modules, don&rsquo;t we want our users to use the current version, so should we not by default do the same with others Modules. Thus we always show the current version number, regardless.</em></p>

<h3>Internal Scanner update</h3>

<p>The internal scanners now all return version strings if present, which is being utilized by the <strong>infile</strong> output format initially.</p>

<p>Bug: only return Module::Name that start with first character upper OLIVER++, Fixed</p>

<h4>UseModule new scanner</h4>

<p>Following on from a suggestion from mst on #toolchain to support Module::Runtime includes, has turned in to a new scanner <strong>UseModule</strong>.</p>

<p>Checking for the following, extracting module name and version strings.</p>

<p>{% codeblock A selection of what UseModule supports lang:perl %}
use_module(&ldquo;Module::Name&rdquo;, x.xx)&ndash;>new( &hellip; );
require_module( &lsquo;Module::Name&rsquo;);
use_package_optimistically(&ldquo;Module::Name&rdquo;, x.xx)&ndash;>new( &hellip; );</p>

<p>my $abc = use_module(&ldquo;Module::Name&rdquo;, x.xx)&ndash;>new( &hellip; );
my $abc = use_package_optimistically(&ldquo;Module::Name&rdquo;, x.xx)&ndash;>new( &hellip; );</p>

<p>$abc = use_module(&ldquo;Module::Name&rdquo;, x.xx)&ndash;>new( &hellip; );
$abc = use_package_optimistically(&ldquo;Module::Name&rdquo;, x.xx)&ndash;>new( &hellip; );</p>

<p>return use_module( &lsquo;Module::Name&rsquo;, x,xx )&ndash;>new( &hellip; );
return use_package_optimisticall( &lsquo;Module::Name&rsquo;, x.xx )&ndash;>new( &hellip; );</p>

<p>my $HAVE_MOOSE = eval { require Moose; 1; };
{% endcodeblock %}</p>

<p>We also support the prefix <code>Module::Runtime::...</code> in the above.</p>

<h4>Eval now supports try</h4>

<p>Eval is not realy a new scanner, it&rsquo;s just come of age with block and <strong>try</strong> support.
{% codeblock A selection of what Eval supports lang:perl %}
eval {use Test::Kwalitee::Extra 0.000007};
eval {use Moo 1.002; 1;};
eval { no Moose; 1; };
eval { require Moose };
my $HAVE_MOOSE = eval { require Moose; 1; };</p>

<p>try { no Moose; 1; };
try { require Moose };
my $HAVE_MOOSE = try { require Moose; 1; };
{% endcodeblock %}</p>

<p>Bug: Catch for postfix <strong>if</strong>, Fixed</p>

<p><code>require MRO::Compat if $] &lt; 5.009_005;</code></p>

<h3>Output formats:</h3>

<p>To show the use of UseModule and Eval in the examples below.</p>

<p>Please note that we are using <code>prereqs-&gt;runtime-&gt;recommends</code> to highlight these found modules for you.</p>

<p>perl-minversion is 5.010 in following examples due to <code>mro</code> see below and infile later.
```perl
Perl::MinimumVersion::Fast  {</p>

<pre><code>public methods (5) : minimum_explicit_version, minimum_syntax_version, minimum_version, new, version_markers
private methods (2) : _build_minimum_explicit_version, _build_minimum_syntax_version
internals: {
    minimum_explicit_version   undef,
    minimum_syntax_version     version,
    version_markers            {
        5.010   [
            [0] "use mro"
        ]
    }
}
</code></pre>

<p>}
```</p>

<h4>eumm</h4>

<p>The eumm output format, added for ExtUtils::MakeMaker (enabling &ndash;> META.json) is a complete rework of the previous dzil.</p>

<p><code>midgen --format eumm</code></p>

<p>{% codeblock Output Format eumm %}
use strict;
use warnings;
use ExtUtils::MakeMaker 6.68;</p>

<p>WriteMakefile(
   &lsquo;NAME&rsquo; => &lsquo;Class::Accessor::Grouped&rsquo;,
   &lsquo;VERSION_FROM&rsquo; => &lsquo;lib/Class/Accessor/Grouped.pm&rsquo;,
   &lsquo;ABSTRACT_FROM&rsquo; => &lsquo;lib/Class/Accessor/Grouped.pm&rsquo;,
   &lsquo;AUTHOR&rsquo; => &lsquo;&hellip;&rsquo;,
   &lsquo;LICENSE&rsquo; => &lsquo;perl&rsquo;,
   &lsquo;BUILD_REQUIRES&rsquo; => {</p>

<pre><code>  'ExtUtils::MakeMaker' =&gt; '6.68'
</code></pre>

<p>   },
   &lsquo;CONFIGURE_REQUIRES&rsquo; => {</p>

<pre><code>  'ExtUtils::MakeMaker' =&gt; '6.68'
</code></pre>

<p>   },
   &lsquo;MIN_PERL_VERSION&rsquo; => &lsquo;5.010&rsquo;,
   &lsquo;PREREQ_PM&rsquo; => {</p>

<pre><code>   'Class::XSAccessor' =&gt; '1.19',
   'MRO::Compat'       =&gt; '0.12',
   'Module::Runtime'   =&gt; '0.014',
   'Sub::Name'         =&gt; '0.05',
</code></pre>

<p>   },
   &lsquo;TEST_REQUIRES&rsquo; => {</p>

<pre><code>   'Test::Exception'        =&gt; '0.32',
   'Test::More'             =&gt; '1.001002',
</code></pre>

<p>   },
   &lsquo;META_MERGE&rsquo; => {</p>

<pre><code>  'meta-spec' =&gt; { 'version' =&gt; '2' },
  'prereqs' =&gt; {
     'test' =&gt; {
        'suggests' =&gt; {
            'Devel::Hide'         =&gt; '0.0009',
            'Package::Stash'      =&gt; '0.36',
            'Pod::Coverage'       =&gt; '0.23',
            'Test::CheckManifest' =&gt; '1.28',
            'Test::NoTabs'        =&gt; '1.3',
            'Test::Pod'           =&gt; '1.48',
            'Test::Pod::Coverage' =&gt; '1.08',
            'Test::Spelling'      =&gt; '0.19',
            'Test::Strict'        =&gt; '0.22',
        }
     }
  },
</code></pre>

<p>   },
)
{% endcodeblock %}</p>

<h4>metajson</h4>

<p>Now with support for <code>prereqs-&gt;runtime-&gt;recommends</code> Meta-CPAN-spec v2</p>

<p><code>midgen --format metajson</code></p>

<p>{% codeblock Output Format metajson %}
{
   &ldquo;prereqs&rdquo; : {</p>

<pre><code>  "runtime" : {
     "requires" : {
        "Module::Runtime" : "0.014",
        "perl" : "5.010",
     },
     "suggests" : {...},
     "recommends" : {
        "Class::XSAccessor" : "1.19",
        "MRO::Compat" : "0.12",
        "Sub::Name" : "0.05",
     }
  "test" : {
     "requires" : {
        "Test::Exception" : "0.32",
        "Test::More" : "1.001002",
     },
     "suggests" : {
        "Devel::Hide" : "0.0009",
        "Package::Stash" : "0.36",
        "Pod::Coverage" : "0.23",
        "Test::CheckManifest" : "1.28",
        "Test::NoTabs" : "1.3",
        "Test::Pod" : "1.48",
        "Test::Pod::Coverage" : "1.08",
        "Test::Spelling" : "0.19",
        "Test::Strict" : "0.22",
     }
  }
</code></pre>

<p>   }
   &ldquo;no_index&rdquo; : {</p>

<pre><code>  "directory" : [
     "inc",
     "t",
  ]
</code></pre>

<p>   },
}
{% endcodeblock %}</p>

<h4>cpanfile</h4>

<p>Now with support for <code>prereqs-&gt;runtime-&gt;recommends</code> Meta-CPAN-spec v2</p>

<p><code>midgen --format cpanfile</code></p>

<p>{% codeblock Output Format metajson %}
requires &lsquo;Module::Runtime&rsquo;, &lsquo;0.014&rsquo;;
requires &lsquo;perl&rsquo;,            &lsquo;5.010&rsquo;;</p>

<p>recommends &lsquo;Class::XSAccessor&rsquo;, &lsquo;1.19&rsquo;;
recommends &lsquo;MRO::Compat&rsquo;,       &lsquo;0.12&rsquo;;
recommends &lsquo;Sub::Name&rsquo;,         &lsquo;0.05&rsquo;;</p>

<p>on test => sub {</p>

<pre><code>requires 'Test::Exception',        '0.32';
requires 'Test::More',             '1.001002';

suggests 'Devel::Hide',         '0.0009';
suggests 'Package::Stash',      '0.36';
suggests 'Pod::Coverage',       '0.23';
suggests 'Test::CheckManifest', '1.28';
suggests 'Test::NoTabs',        '1.3';
suggests 'Test::Pod',           '1.48';
suggests 'Test::Pod::Coverage', '1.08';
suggests 'Test::Spelling',      '0.19';
suggests 'Test::Strict',        '0.22';
</code></pre>

<p>};
{% endcodeblock %}</p>

<h4>infile</h4>

<p><code>midgen --format infile</code></p>

<p>Change to internals means that we no longer exclude any found modules.</p>

<p>We no longer check against METAcpan.Api for <code>--format infile</code>, so it is much quicker.</p>

<p><strong>pros</strong> you are going to get a lot more information.</p>

<p><strong>cons</strong> you might see some duplicates as some modules are found by more than one additional scanner.</p>

<p>{% codeblock Output Format infile %}</p>

<hr />



<hr />

<p> | AccessorGroups           | 0        | /t/lib/AccessorGroupsSubclass.pm |
 | AccessorGroupsComp       | 0        | /t/component.t                   |
 | AccessorGroupsParent     | 0        | /t/lib/AccessorGroups.pm         |
 | AccessorGroupsRO         | 0        | /t/accessors_ro.t                |
 | AccessorGroupsSubclass   | 0        | /t/accessors.t                   |
 | AccessorGroupsSubclass   | 0        | /t/accessors_xs_cachedwarn.t     |
 | AccessorGroupsSubclass   | 0        | /t/illegal_name.t                |
 | AccessorGroupsWO         | 0        | /t/accessors_wo.t                |
 | B                        | 0        | /t/accessors.t                   |
 | B                        | 0        | /lib/Class/Accessor/Grouped.pm   |
 | B                        | 0        | /t/basic.t                       |
 | B                        | 0        | /lib/Class/Accessor/Grouped.pm   |
 | BaseInheritedGroups      | 0        | /t/lib/SuperInheritedGroups.pm   |
 | Carp                     | 0        | /lib/Class/Accessor/Grouped.pm   |
 | Class::Accessor::Grouped | 0        | /t/lib/AccessorGroupsParent.pm   |
 | Class::Accessor::Grouped | 0        | /t/lib/AccessorGroupsRO.pm       |
 | Class::Accessor::Grouped | 0        | /t/lib/AccessorGroupsWO.pm       |
 | Class::Accessor::Grouped | 0        | /t/accessors_xs_cachedwarn.t     |
 | Class::Accessor::Grouped | 0        | /t/accessors_xs_cachedwarn.t     |
 | Class::Accessor::Grouped | 0        | /t/lib/AccessorGroupsComp.pm     |
 | Class::Accessor::Grouped | 0        | /t/lib/ExtraInheritedGroups.pm   |
 | Class::Accessor::Grouped | 0        | /t/lib/BaseInheritedGroups.pm    |
 | Class::Accessor::Grouped | 0        | /t/accessors_pp.t                |
 | Class::Accessor::Grouped | 0        | /t/accessors_pp.t                |
 | Class::Accessor::Grouped | 0        | /t/clean_namespace.t             |
 | Class::Accessor::Grouped | 0        | /t/accessors_xs.t                |
 | Class::Accessor::Grouped | 0        | /t/accessors_xs.t                |
 | Class::Accessor::Grouped | 0        | /t/lib/NotHashBased.pm           |
 | Class::XSAccessor        | 0        | /t/accessors_xs_cachedwarn.t     |
 | Class::XSAccessor        | 0        | /t/accessors_xs_cachedwarn.t     |
 | Class::XSAccessor        | 0        | /lib/Class/Accessor/Grouped.pm   |
 | Class::XSAccessor        | 0        | /t/accessors_xs.t                |
 | Class::XSAccessor        | 0        | /t/accessors_xs.t                |
 | Config                   | 0        | /t/accessors_ro.t                |
 | Config                   | 0        | /t/accessors_wo.t                |
 | Data::Dumper             | 0        | /lib/Class/Accessor/Grouped.pm   |
 | Data::Dumper             | 0        | /t/accessors_xs_cachedwarn.t     |
 | Devel::Hide              | 0        | /t/accessors_pp.t                |
 | Devel::Hide              | 0        | /t/accessors_pp.t                |
 | ExtraInheritedGroups     | 0        | /t/inherited.t                   |
 | File::Basename           | 0        | /t/strict.t                      |
 | File::Basename           | 0        | /t/strict.t                      |
 | File::Basename           | 0        | /t/warnings.t                    |
 | File::Basename           | 0        | /t/warnings.t                    |
 | File::Find               | 0        | /t/strict.t                      |
 | File::Find               | 0        | /t/warnings.t                    |
 | File::Find               | 0        | /t/warnings.t                    |
 | File::Find               | 0        | /t/strict.t                      |
 | File::Spec::Functions    | 0        | /t/accessors_xs.t                |
 | File::Spec::Functions    | 0        | /t/accessors_pp.t                |
 | File::Spec::Unix         | 0        | /t/accessors_pp.t                |
 | File::Spec::Unix         | 0        | /t/accessors_xs.t                |
 | FindBin                  | 0        | /t/accessors_pp.t                |
 | FindBin                  | 0        | /t/accessors_xs.t                |
 | MRO::Compat              | 0        | /lib/Class/Accessor/Grouped.pm   |
 | MRO::Compat              | 0        | /t/clean_namespace.t             |
 | MRO::Compat              | 0        | /t/clean_namespace.t             |
 | Module::Runtime          | 0        | /lib/Class/Accessor/Grouped.pm   |
 | NotHashBased             | 0        | /t/inherited.t                   |
 | Package::Stash           | 0        | /t/clean_namespace.t             |
 | Package::Stash           | 0        | /t/clean_namespace.t             |
 | Pod::Coverage            | 0.14     | /t/pod_coverage.t                |
 | Scalar::Util             | 0        | /lib/Class/Accessor/Grouped.pm   |
 | Sub::Name                | 0        | /t/illegal_name.t                |
 | Sub::Name                | 0        | /t/accessors_xs_cachedwarn.t     |
 | Sub::Name                | 0        | /t/accessors_xs_cachedwarn.t     |
 | Sub::Name                | 0        | /lib/Class/Accessor/Grouped.pm   |
 | Sub::Name                | 0        | /t/accessors_xs.t                |
 | Sub::Name                | 0        | /t/accessors_xs.t                |
 | Sub::Name                | 0        | /t/accessors_pp.t                |
 | Sub::Name                | 0        | /t/illegal_name.t                |
 | Sub::Name                | 0        | /t/accessors_pp.t                |
 | SuperInheritedGroups     | 0        | /t/inherited.t                   |
 | Test::CheckManifest      | 0.09     | /t/manifest.t                    |
 | Test::Exception          | 0        | /t/inherited.t                   |
 | Test::Exception          | 0        | /t/component.t                   |
 | Test::Exception          | 0        | /t/accessors_ro.t                |
 | Test::Exception          | 0        | /t/accessors_wo.t                |
 | Test::Exception          | 0        | /t/illegal_name.t                |
 | Test::More               | 0        | /t/strict.t                      |
 | Test::More               | 0        | /t/accessors_wo.t                |
 | Test::More               | 0        | /t/component.t                   |
 | Test::More               | 0        | /t/manifest.t                    |
 | Test::More               | 0        | /t/manifest.t                    |
 | Test::More               | 0        | /t/accessors.t                   |
 | Test::More               | 0        | /t/accessors_xs_cachedwarn.t     |
 | Test::More               | 0        | /t/pod_syntax.t                  |
 | Test::More               | 0        | /t/pod_syntax.t                  |
 | Test::More               | 0        | /t/pod_spelling.t                |
 | Test::More               | 0        | /t/pod_spelling.t                |
 | Test::More               | 0        | /t/basic.t                       |
 | Test::More               | 0        | /t/style_no_tabs.t               |
 | Test::More               | 0        | /t/style_no_tabs.t               |
 | Test::More               | 0        | /t/warnings.t                    |
 | Test::More               | 0        | /t/warnings.t                    |
 | Test::More               | 0        | /t/accessors_pp.t                |
 | Test::More               | 0        | /t/clean_namespace.t             |
 | Test::More               | 0        | /t/accessors_xs.t                |
 | Test::More               | 0        | /t/inherited.t                   |
 | Test::More               | 0        | /t/strict.t                      |
 | Test::More               | 0        | /t/illegal_name.t                |
 | Test::More               | 0        | /t/accessors_ro.t                |
 | Test::More               | 0        | /t/pod_coverage.t                |
 | Test::More               | 0        | /t/pod_coverage.t                |
 | Test::NoTabs             | 0.03     | /t/style_no_tabs.t               |
 | Test::Pod                | 1.00     | /t/pod_syntax.t                  |
 | Test::Pod::Coverage      | 1.04     | /t/pod_coverage.t                |
 | Test::Spelling           | 0.11     | /t/pod_spelling.t                |
 | Test::Strict             | 0        | /t/strict.t                      |
 | Test::Strict             | 0.05     | /t/warnings.t                    |
 | base                     | 0        | /t/lib/ExtraInheritedGroups.pm   |
 | base                     | 0        | /t/lib/NotHashBased.pm           |
 | base                     | 0        | /t/lib/SuperInheritedGroups.pm   |
 | base                     | 0        | /t/lib/BaseInheritedGroups.pm    |
 | base                     | 0        | /t/lib/AccessorGroups.pm         |
 | base                     | 0        | /t/lib/AccessorGroupsParent.pm   |
 | base                     | 0        | /t/lib/AccessorGroupsSubclass.pm |
 | base                     | 0        | /t/lib/AccessorGroupsComp.pm     |
 | base                     | 0        | /t/lib/AccessorGroupsRO.pm       |
 | base                     | 0        | /t/lib/AccessorGroupsWO.pm       |
 | base                     | 0        | /t/clean_namespace.t             |
 | constant                 | 0        | /lib/Class/Accessor/Grouped.pm   |
 | lib                      | 0        | /t/manifest.t                    |
 | lib                      | 0        | /t/pod_syntax.t                  |
 | lib                      | 0        | /t/accessors_xs_cachedwarn.t     |
 | lib                      | 0        | /t/component.t                   |
 | lib                      | 0        | /t/warnings.t                    |
 | lib                      | 0        | /t/accessors.t                   |
 | lib                      | 0        | /t/accessors_wo.t                |
 | lib                      | 0        | /t/accessors_xs.t                |
 | lib                      | 0        | /t/pod_spelling.t                |
 | lib                      | 0        | /t/inherited.t                   |
 | lib                      | 0        | /t/accessors_ro.t                |
 | lib                      | 0        | /t/illegal_name.t                |
 | lib                      | 0        | /t/pod_coverage.t                |
 | lib                      | 0        | /t/strict.t                      |
 | lib                      | 0        | /t/accessors_pp.t                |
 | mro                      | 0        | /lib/Class/Accessor/Grouped.pm   |
 | strict                   | 0        | /t/pod_spelling.t                |
 | strict                   | 0        | /t/lib/ExtraInheritedGroups.pm   |
 | strict                   | 0        | /t/manifest.t                    |
 | strict                   | 0        | /t/accessors.t                   |
 | strict                   | 0        | /t/accessors_xs_cachedwarn.t     |
 | strict                   | 0        | /lib/Class/Accessor/Grouped.pm   |
 | strict                   | 0        | /t/lib/AccessorGroupsComp.pm     |
 | strict                   | 0        | /t/accessors_pp.t                |
 | strict                   | 0        | /t/lib/SuperInheritedGroups.pm   |
 | strict                   | 0        | /t/basic.t                       |
 | strict                   | 0        | /t/pod_syntax.t                  |
 | strict                   | 0        | /t/clean_namespace.t             |
 | strict                   | 0        | /t/style_no_tabs.t               |
 | strict                   | 0        | /t/lib/AccessorGroupsWO.pm       |
 | strict                   | 0        | /t/warnings.t                    |
 | strict                   | 0        | /t/lib/AccessorGroupsRO.pm       |
 | strict                   | 0        | /t/component.t                   |
 | strict                   | 0        | /t/lib/NotHashBased.pm           |
 | strict                   | 0        | /t/inherited.t                   |
 | strict                   | 0        | /t/lib/BaseInheritedGroups.pm    |
 | strict                   | 0        | /t/lib/AccessorGroupsParent.pm   |
 | strict                   | 0        | /t/lib/AccessorGroups.pm         |
 | strict                   | 0        | /t/lib/AccessorGroupsSubclass.pm |
 | strict                   | 0        | /t/strict.t                      |
 | strict                   | 0        | /t/accessors_xs.t                |
 | strict                   | 0        | /t/accessors_wo.t                |
 | strict                   | 0        | /t/accessors_ro.t                |
 | strict                   | 0        | /t/illegal_name.t                |
 | strict                   | 0        | /t/pod_coverage.t                |
 | warnings                 | 0        | /t/warnings.t                    |
 | warnings                 | 0        | /t/illegal_name.t                |
 | warnings                 | 0        | /t/accessors.t                   |
 | warnings                 | 0        | /t/manifest.t                    |
 | warnings                 | 0        | /t/pod_syntax.t                  |
 | warnings                 | 0        | /t/accessors_xs_cachedwarn.t     |
 | warnings                 | 0        | /t/lib/NotHashBased.pm           |
 | warnings                 | 0        | /t/lib/SuperInheritedGroups.pm   |
 | warnings                 | 0        | /t/basic.t                       |
 | warnings                 | 0        | /t/lib/BaseInheritedGroups.pm    |
 | warnings                 | 0        | /t/style_no_tabs.t               |
 | warnings                 | 0        | /t/lib/AccessorGroupsRO.pm       |
 | warnings                 | 0        | /lib/Class/Accessor/Grouped.pm   |
 | warnings                 | 0        | /t/clean_namespace.t             |
 | warnings                 | 0        | /t/lib/AccessorGroupsComp.pm     |
 | warnings                 | 0        | /t/component.t                   |
 | warnings                 | 0        | /t/lib/AccessorGroupsWO.pm       |
 | warnings                 | 0        | /t/lib/AccessorGroups.pm         |
 | warnings                 | 0        | /t/lib/AccessorGroupsParent.pm   |
 | warnings                 | 0        | /t/lib/AccessorGroupsSubclass.pm |
 | warnings                 | 0        | /t/pod_spelling.t                |
 | warnings                 | 0        | /t/accessors_ro.t                |
 | warnings                 | 0        | /t/strict.t                      |
 | warnings                 | 0        | /t/accessors_pp.t                |
 | warnings                 | 0        | /t/lib/ExtraInheritedGroups.pm   |
 | warnings                 | 0        | /t/inherited.t                   |
 | warnings                 | 0        | /t/accessors_xs.t                |
 | warnings                 | 0        | /t/accessors_wo.t                |
 | warnings                 | 0        | /t/pod_coverage.t                |</p>

<hr />

<p>{% endcodeblock %}</p>

<p>NB: This is the only output format which displays the found version string at present.</p>

<p><code>__END__</code></p>
]]></content>
  </entry>
  
</feed>
