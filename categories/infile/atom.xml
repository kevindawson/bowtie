<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: infile | The Musings of a Dyslexic Technologist]]></title>
  <link href="http://kevindawson.github.io/bowtie/categories/infile/atom.xml" rel="self"/>
  <link href="http://kevindawson.github.io/bowtie/"/>
  <updated>2014-03-23T18:18:23+00:00</updated>
  <id>http://kevindawson.github.io/bowtie/</id>
  <author>
    <name><![CDATA[bowtie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[midgen 0.28 plus]]></title>
    <link href="http://kevindawson.github.io/bowtie/2014/02/16/app-midgen-009/"/>
    <updated>2014-02-16T14:40:00+00:00</updated>
    <id>http://kevindawson.github.io/bowtie/2014/02/16/app-midgen-009</id>
    <content type="html"><![CDATA[<h2>Update</h2>

<ul>
<li>Flowchart</li>
<li>infile &ndash; Installed</li>
</ul>


<!-- more -->


<p><em>Food for thought, if we update our Modules, don&rsquo;t we want our users to use the current version, so should we not by default do the same with others Modules. Thus we always show the current version number, regardless.</em></p>

<h3>Flowchart</h3>

<h4>now extracting RuntimeRecommends</h4>

<p>The following is the current logic of what midgen is doing and the order it dose it in. All internals now follow the meta-2 phase-requirements naming as and where applicable internally for clarity.</p>

<p><img src="/images/009-midgen_002.png"></p>

<h3>infile &ndash; Installed</h3>

<p>This enharcment to output infile to include Installed was suggested by mst++</p>

<ul>
<li>Installed &ndash; found in <strong>@INC</strong> not in the distribution we are scanning.</li>
<li>Version &ndash; found in module includes within your distribution ( use Module::Name 0.123; )</li>
</ul>


<p>In the end I opted for some color: Missing in red ether++</p>

<p>The following is the result of <code>midgen -f infile</code>
<img src="/images/009-midgen_003.png" title="midgen -f infile" ></p>

<p>NB: I always work with &lsquo;White on Black&rsquo;</p>

<p><code>__END__</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing App::Midgen v0.28]]></title>
    <link href="http://kevindawson.github.io/bowtie/2014/02/08/app-midgen-008/"/>
    <updated>2014-02-08T14:40:00+00:00</updated>
    <id>http://kevindawson.github.io/bowtie/2014/02/08/app-midgen-008</id>
    <content type="html"><![CDATA[<h2>So whatâ€™s new?</h2>

<ul>
<li>Now with support for <code>prereqs-&gt;runtime-&gt;recommends</code> Meta-CPAN-spec v2</li>
<li>Internal scanner update and why

<ul>
<li>New scanner <strong>UseModule</strong>, Module::Runtime support</li>
<li>Scanner <strong>Eval</strong> now supports <strong>try</strong> Blocks as well.</li>
<li>Internal scanners now provide version strings, used by <strong>infile</strong>, output format</li>
</ul>
</li>
<li>Changes to the output formats:

<ul>
<li>Output format, <strong>eumm</strong>, added for ExtUtils::MakeMaker (enabling &ndash;> META.json)</li>
<li>Updates to <strong>metacpan</strong> &amp;&amp; <strong>cpanfile</strong> to show <code>prereqs-&gt;runtime-&gt;recommends</code></li>
</ul>
</li>
</ul>


<!-- more -->


<p><em>Food for thought, if we update our Modules, don&rsquo;t we want our users to use the current version, so should we not by default do the same with others Modules. Thus we always show the current version number, regardless.</em></p>

<h3>Internal Scanner update</h3>

<p>The internal scanners now all return version strings if present, which is being utilized by the <strong>infile</strong> output format initially.</p>

<p>Bug: only return Module::Name that start with first character upper OLIVER++, Fixed</p>

<h4>UseModule new scanner</h4>

<p>Following on from a suggestion from mst on #toolchain to support Module::Runtime includes, has turned in to a new scanner <strong>UseModule</strong>.</p>

<p>Checking for the following, extracting module name and version strings.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>A selection of what UseModule supports </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">use_module</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">x</span><span class="o">.</span><span class="n">xx</span><span class="p">)</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;</span><span class="k">new</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span> <span class="p">);</span>
</span><span class='line'><span class="n">require_module</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="n">use_package_optimistically</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">x</span><span class="o">.</span><span class="n">xx</span><span class="p">)</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;</span><span class="k">new</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span> <span class="p">);</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="k">my</span> <span class="nv">$abc</span> <span class="o">=</span> <span class="n">use_module</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">x</span><span class="o">.</span><span class="n">xx</span><span class="p">)</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;</span><span class="k">new</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span> <span class="p">);</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$abc</span> <span class="o">=</span> <span class="n">use_package_optimistically</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">x</span><span class="o">.</span><span class="n">xx</span><span class="p">)</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;</span><span class="k">new</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span> <span class="p">);</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nv">$abc</span> <span class="o">=</span> <span class="n">use_module</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">x</span><span class="o">.</span><span class="n">xx</span><span class="p">)</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;</span><span class="k">new</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span> <span class="p">);</span>
</span><span class='line'><span class="nv">$abc</span> <span class="o">=</span> <span class="n">use_package_optimistically</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">x</span><span class="o">.</span><span class="n">xx</span><span class="p">)</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;</span><span class="k">new</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span> <span class="p">);</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="k">return</span> <span class="n">use_module</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">x</span><span class="p">,</span><span class="n">xx</span> <span class="p">)</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;</span><span class="k">new</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span> <span class="p">);</span>
</span><span class='line'><span class="k">return</span> <span class="n">use_package_optimisticall</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="nn">Module::</span><span class="n">Name</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">x</span><span class="o">.</span><span class="n">xx</span> <span class="p">)</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;</span><span class="k">new</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span> <span class="p">);</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="k">my</span> <span class="nv">$HAVE_MOOSE</span> <span class="o">=</span> <span class="nb">eval</span> <span class="p">{</span> <span class="nb">require</span> <span class="n">Moose</span><span class="p">;</span> <span class="mi">1</span><span class="p">;</span> <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We also support the prefix <code>Module::Runtime::...</code> in the above.</p>

<h4>Eval now supports try</h4>

<p>Eval is not realy a new scanner, it&rsquo;s just come of age with block and <strong>try</strong> support.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>A selection of what Eval supports </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">eval</span> <span class="p">{</span><span class="k">use</span> <span class="nn">Test::Kwalitee::</span><span class="n">Extra</span> <span class="mf">0.000007</span><span class="p">};</span>
</span><span class='line'><span class="nb">eval</span> <span class="p">{</span><span class="k">use</span> <span class="n">Moo</span> <span class="mf">1.002</span><span class="p">;</span> <span class="mi">1</span><span class="p">;};</span>
</span><span class='line'><span class="nb">eval</span> <span class="p">{</span> <span class="nb">no</span> <span class="n">Moose</span><span class="p">;</span> <span class="mi">1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="nb">eval</span> <span class="p">{</span> <span class="nb">require</span> <span class="n">Moose</span> <span class="p">};</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$HAVE_MOOSE</span> <span class="o">=</span> <span class="nb">eval</span> <span class="p">{</span> <span class="nb">require</span> <span class="n">Moose</span><span class="p">;</span> <span class="mi">1</span><span class="p">;</span> <span class="p">};</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="n">try</span> <span class="p">{</span> <span class="nb">no</span> <span class="n">Moose</span><span class="p">;</span> <span class="mi">1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="n">try</span> <span class="p">{</span> <span class="nb">require</span> <span class="n">Moose</span> <span class="p">};</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$HAVE_MOOSE</span> <span class="o">=</span> <span class="n">try</span> <span class="p">{</span> <span class="nb">require</span> <span class="n">Moose</span><span class="p">;</span> <span class="mi">1</span><span class="p">;</span> <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Bug: Catch for postfix <strong>if</strong>, Fixed</p>

<p><code>require MRO::Compat if $] &lt; 5.009_005;</code></p>

<h3>Output formats:</h3>

<p>To show the use of UseModule and Eval in the examples below.</p>

<p>Please note that we are using <code>prereqs-&gt;runtime-&gt;recommends</code> to highlight these found modules for you.</p>

<p>perl-minversion is 5.010 in following examples due to <code>mro</code> see below and infile later.
```perl
Perl::MinimumVersion::Fast  {</p>

<pre><code>public methods (5) : minimum_explicit_version, minimum_syntax_version, minimum_version, new, version_markers
private methods (2) : _build_minimum_explicit_version, _build_minimum_syntax_version
internals: {
    minimum_explicit_version   undef,
    minimum_syntax_version     version,
    version_markers            {
        5.010   [
            [0] "use mro"
        ]
    }
}
</code></pre>

<p>}
```</p>

<h4>eumm</h4>

<p>The eumm output format, added for ExtUtils::MakeMaker (enabling &ndash;> META.json) is a complete rework of the previous dzil.</p>

<p><code>midgen --format eumm</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Output Format eumm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use strict;
</span><span class='line'>use warnings;
</span><span class='line'>use ExtUtils::MakeMaker 6.68;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>WriteMakefile(
</span><span class='line'>   &lsquo;NAME&rsquo; => &lsquo;Class::Accessor::Grouped&rsquo;,
</span><span class='line'>   &lsquo;VERSION_FROM&rsquo; => &lsquo;lib/Class/Accessor/Grouped.pm&rsquo;,
</span><span class='line'>   &lsquo;ABSTRACT_FROM&rsquo; => &lsquo;lib/Class/Accessor/Grouped.pm&rsquo;,
</span><span class='line'>   &lsquo;AUTHOR&rsquo; => &lsquo;&hellip;&rsquo;,
</span><span class='line'>   &lsquo;LICENSE&rsquo; => &lsquo;perl&rsquo;,
</span><span class='line'>   &lsquo;BUILD_REQUIRES&rsquo; => {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  'ExtUtils::MakeMaker' =&gt; '6.68'
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>   },
</span><span class='line'>   &lsquo;CONFIGURE_REQUIRES&rsquo; => {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  'ExtUtils::MakeMaker' =&gt; '6.68'
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>   },
</span><span class='line'>   &lsquo;MIN_PERL_VERSION&rsquo; => &lsquo;5.010&rsquo;,
</span><span class='line'>   &lsquo;PREREQ_PM&rsquo; => {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>   'Class::XSAccessor' =&gt; '1.19',
</span><span class='line'>   'MRO::Compat'       =&gt; '0.12',
</span><span class='line'>   'Module::Runtime'   =&gt; '0.014',
</span><span class='line'>   'Sub::Name'         =&gt; '0.05',
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>   },
</span><span class='line'>   &lsquo;TEST_REQUIRES&rsquo; => {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>   'Test::Exception'        =&gt; '0.32',
</span><span class='line'>   'Test::More'             =&gt; '1.001002',
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>   },
</span><span class='line'>   &lsquo;META_MERGE&rsquo; => {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  'meta-spec' =&gt; { 'version' =&gt; '2' },
</span><span class='line'>  'prereqs' =&gt; {
</span><span class='line'>     'test' =&gt; {
</span><span class='line'>        'suggests' =&gt; {
</span><span class='line'>            'Devel::Hide'         =&gt; '0.0009',
</span><span class='line'>            'Package::Stash'      =&gt; '0.36',
</span><span class='line'>            'Pod::Coverage'       =&gt; '0.23',
</span><span class='line'>            'Test::CheckManifest' =&gt; '1.28',
</span><span class='line'>            'Test::NoTabs'        =&gt; '1.3',
</span><span class='line'>            'Test::Pod'           =&gt; '1.48',
</span><span class='line'>            'Test::Pod::Coverage' =&gt; '1.08',
</span><span class='line'>            'Test::Spelling'      =&gt; '0.19',
</span><span class='line'>            'Test::Strict'        =&gt; '0.22',
</span><span class='line'>        }
</span><span class='line'>     }
</span><span class='line'>  },
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>   },
</span><span class='line'>)</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>metajson</h4>

<p>Now with support for <code>prereqs-&gt;runtime-&gt;recommends</code> Meta-CPAN-spec v2</p>

<p><code>midgen --format metajson</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Output Format metajson </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>   &ldquo;prereqs&rdquo; : {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  "runtime" : {
</span><span class='line'>     "requires" : {
</span><span class='line'>        "Module::Runtime" : "0.014",
</span><span class='line'>        "perl" : "5.010",
</span><span class='line'>     },
</span><span class='line'>     "suggests" : {...},
</span><span class='line'>     "recommends" : {
</span><span class='line'>        "Class::XSAccessor" : "1.19",
</span><span class='line'>        "MRO::Compat" : "0.12",
</span><span class='line'>        "Sub::Name" : "0.05",
</span><span class='line'>     }
</span><span class='line'>  "test" : {
</span><span class='line'>     "requires" : {
</span><span class='line'>        "Test::Exception" : "0.32",
</span><span class='line'>        "Test::More" : "1.001002",
</span><span class='line'>     },
</span><span class='line'>     "suggests" : {
</span><span class='line'>        "Devel::Hide" : "0.0009",
</span><span class='line'>        "Package::Stash" : "0.36",
</span><span class='line'>        "Pod::Coverage" : "0.23",
</span><span class='line'>        "Test::CheckManifest" : "1.28",
</span><span class='line'>        "Test::NoTabs" : "1.3",
</span><span class='line'>        "Test::Pod" : "1.48",
</span><span class='line'>        "Test::Pod::Coverage" : "1.08",
</span><span class='line'>        "Test::Spelling" : "0.19",
</span><span class='line'>        "Test::Strict" : "0.22",
</span><span class='line'>     }
</span><span class='line'>  }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>   }
</span><span class='line'>   &ldquo;no_index&rdquo; : {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  "directory" : [
</span><span class='line'>     "inc",
</span><span class='line'>     "t",
</span><span class='line'>  ]
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>   },
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>cpanfile</h4>

<p>Now with support for <code>prereqs-&gt;runtime-&gt;recommends</code> Meta-CPAN-spec v2</p>

<p><code>midgen --format cpanfile</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Output Format metajson </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>requires &lsquo;Module::Runtime&rsquo;, &lsquo;0.014&rsquo;;
</span><span class='line'>requires &lsquo;perl&rsquo;,            &lsquo;5.010&rsquo;;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>recommends &lsquo;Class::XSAccessor&rsquo;, &lsquo;1.19&rsquo;;
</span><span class='line'>recommends &lsquo;MRO::Compat&rsquo;,       &lsquo;0.12&rsquo;;
</span><span class='line'>recommends &lsquo;Sub::Name&rsquo;,         &lsquo;0.05&rsquo;;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>on test => sub {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>requires 'Test::Exception',        '0.32';
</span><span class='line'>requires 'Test::More',             '1.001002';
</span><span class='line'>
</span><span class='line'>suggests 'Devel::Hide',         '0.0009';
</span><span class='line'>suggests 'Package::Stash',      '0.36';
</span><span class='line'>suggests 'Pod::Coverage',       '0.23';
</span><span class='line'>suggests 'Test::CheckManifest', '1.28';
</span><span class='line'>suggests 'Test::NoTabs',        '1.3';
</span><span class='line'>suggests 'Test::Pod',           '1.48';
</span><span class='line'>suggests 'Test::Pod::Coverage', '1.08';
</span><span class='line'>suggests 'Test::Spelling',      '0.19';
</span><span class='line'>suggests 'Test::Strict',        '0.22';
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>};</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>infile</h4>

<p><code>midgen --format infile</code></p>

<p>Change to internals means that we no longer exclude any found modules.</p>

<p>We no longer check against METAcpan.Api for <code>--format infile</code>, so it is much quicker.</p>

<p><strong>pros</strong> you are going to get a lot more information.</p>

<p><strong>cons</strong> you might see some duplicates as some modules are found by more than one additional scanner.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Output Format infile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;p> | AccessorGroups           | 0        | /t/lib/AccessorGroupsSubclass.pm |
</span><span class='line'> | AccessorGroupsComp       | 0        | /t/component.t                   |
</span><span class='line'> | AccessorGroupsParent     | 0        | /t/lib/AccessorGroups.pm         |
</span><span class='line'> | AccessorGroupsRO         | 0        | /t/accessors_ro.t                |
</span><span class='line'> | AccessorGroupsSubclass   | 0        | /t/accessors.t                   |
</span><span class='line'> | AccessorGroupsSubclass   | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | AccessorGroupsSubclass   | 0        | /t/illegal_name.t                |
</span><span class='line'> | AccessorGroupsWO         | 0        | /t/accessors_wo.t                |
</span><span class='line'> | B                        | 0        | /t/accessors.t                   |
</span><span class='line'> | B                        | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | B                        | 0        | /t/basic.t                       |
</span><span class='line'> | B                        | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | BaseInheritedGroups      | 0        | /t/lib/SuperInheritedGroups.pm   |
</span><span class='line'> | Carp                     | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/lib/AccessorGroupsParent.pm   |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/lib/AccessorGroupsRO.pm       |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/lib/AccessorGroupsWO.pm       |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/lib/AccessorGroupsComp.pm     |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/lib/ExtraInheritedGroups.pm   |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/lib/BaseInheritedGroups.pm    |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/accessors_pp.t                |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/accessors_pp.t                |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/clean_namespace.t             |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/accessors_xs.t                |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/accessors_xs.t                |
</span><span class='line'> | Class::Accessor::Grouped | 0        | /t/lib/NotHashBased.pm           |
</span><span class='line'> | Class::XSAccessor        | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | Class::XSAccessor        | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | Class::XSAccessor        | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | Class::XSAccessor        | 0        | /t/accessors_xs.t                |
</span><span class='line'> | Class::XSAccessor        | 0        | /t/accessors_xs.t                |
</span><span class='line'> | Config                   | 0        | /t/accessors_ro.t                |
</span><span class='line'> | Config                   | 0        | /t/accessors_wo.t                |
</span><span class='line'> | Data::Dumper             | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | Data::Dumper             | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | Devel::Hide              | 0        | /t/accessors_pp.t                |
</span><span class='line'> | Devel::Hide              | 0        | /t/accessors_pp.t                |
</span><span class='line'> | ExtraInheritedGroups     | 0        | /t/inherited.t                   |
</span><span class='line'> | File::Basename           | 0        | /t/strict.t                      |
</span><span class='line'> | File::Basename           | 0        | /t/strict.t                      |
</span><span class='line'> | File::Basename           | 0        | /t/warnings.t                    |
</span><span class='line'> | File::Basename           | 0        | /t/warnings.t                    |
</span><span class='line'> | File::Find               | 0        | /t/strict.t                      |
</span><span class='line'> | File::Find               | 0        | /t/warnings.t                    |
</span><span class='line'> | File::Find               | 0        | /t/warnings.t                    |
</span><span class='line'> | File::Find               | 0        | /t/strict.t                      |
</span><span class='line'> | File::Spec::Functions    | 0        | /t/accessors_xs.t                |
</span><span class='line'> | File::Spec::Functions    | 0        | /t/accessors_pp.t                |
</span><span class='line'> | File::Spec::Unix         | 0        | /t/accessors_pp.t                |
</span><span class='line'> | File::Spec::Unix         | 0        | /t/accessors_xs.t                |
</span><span class='line'> | FindBin                  | 0        | /t/accessors_pp.t                |
</span><span class='line'> | FindBin                  | 0        | /t/accessors_xs.t                |
</span><span class='line'> | MRO::Compat              | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | MRO::Compat              | 0        | /t/clean_namespace.t             |
</span><span class='line'> | MRO::Compat              | 0        | /t/clean_namespace.t             |
</span><span class='line'> | Module::Runtime          | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | NotHashBased             | 0        | /t/inherited.t                   |
</span><span class='line'> | Package::Stash           | 0        | /t/clean_namespace.t             |
</span><span class='line'> | Package::Stash           | 0        | /t/clean_namespace.t             |
</span><span class='line'> | Pod::Coverage            | 0.14     | /t/pod_coverage.t                |
</span><span class='line'> | Scalar::Util             | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | Sub::Name                | 0        | /t/illegal_name.t                |
</span><span class='line'> | Sub::Name                | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | Sub::Name                | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | Sub::Name                | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | Sub::Name                | 0        | /t/accessors_xs.t                |
</span><span class='line'> | Sub::Name                | 0        | /t/accessors_xs.t                |
</span><span class='line'> | Sub::Name                | 0        | /t/accessors_pp.t                |
</span><span class='line'> | Sub::Name                | 0        | /t/illegal_name.t                |
</span><span class='line'> | Sub::Name                | 0        | /t/accessors_pp.t                |
</span><span class='line'> | SuperInheritedGroups     | 0        | /t/inherited.t                   |
</span><span class='line'> | Test::CheckManifest      | 0.09     | /t/manifest.t                    |
</span><span class='line'> | Test::Exception          | 0        | /t/inherited.t                   |
</span><span class='line'> | Test::Exception          | 0        | /t/component.t                   |
</span><span class='line'> | Test::Exception          | 0        | /t/accessors_ro.t                |
</span><span class='line'> | Test::Exception          | 0        | /t/accessors_wo.t                |
</span><span class='line'> | Test::Exception          | 0        | /t/illegal_name.t                |
</span><span class='line'> | Test::More               | 0        | /t/strict.t                      |
</span><span class='line'> | Test::More               | 0        | /t/accessors_wo.t                |
</span><span class='line'> | Test::More               | 0        | /t/component.t                   |
</span><span class='line'> | Test::More               | 0        | /t/manifest.t                    |
</span><span class='line'> | Test::More               | 0        | /t/manifest.t                    |
</span><span class='line'> | Test::More               | 0        | /t/accessors.t                   |
</span><span class='line'> | Test::More               | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | Test::More               | 0        | /t/pod_syntax.t                  |
</span><span class='line'> | Test::More               | 0        | /t/pod_syntax.t                  |
</span><span class='line'> | Test::More               | 0        | /t/pod_spelling.t                |
</span><span class='line'> | Test::More               | 0        | /t/pod_spelling.t                |
</span><span class='line'> | Test::More               | 0        | /t/basic.t                       |
</span><span class='line'> | Test::More               | 0        | /t/style_no_tabs.t               |
</span><span class='line'> | Test::More               | 0        | /t/style_no_tabs.t               |
</span><span class='line'> | Test::More               | 0        | /t/warnings.t                    |
</span><span class='line'> | Test::More               | 0        | /t/warnings.t                    |
</span><span class='line'> | Test::More               | 0        | /t/accessors_pp.t                |
</span><span class='line'> | Test::More               | 0        | /t/clean_namespace.t             |
</span><span class='line'> | Test::More               | 0        | /t/accessors_xs.t                |
</span><span class='line'> | Test::More               | 0        | /t/inherited.t                   |
</span><span class='line'> | Test::More               | 0        | /t/strict.t                      |
</span><span class='line'> | Test::More               | 0        | /t/illegal_name.t                |
</span><span class='line'> | Test::More               | 0        | /t/accessors_ro.t                |
</span><span class='line'> | Test::More               | 0        | /t/pod_coverage.t                |
</span><span class='line'> | Test::More               | 0        | /t/pod_coverage.t                |
</span><span class='line'> | Test::NoTabs             | 0.03     | /t/style_no_tabs.t               |
</span><span class='line'> | Test::Pod                | 1.00     | /t/pod_syntax.t                  |
</span><span class='line'> | Test::Pod::Coverage      | 1.04     | /t/pod_coverage.t                |
</span><span class='line'> | Test::Spelling           | 0.11     | /t/pod_spelling.t                |
</span><span class='line'> | Test::Strict             | 0        | /t/strict.t                      |
</span><span class='line'> | Test::Strict             | 0.05     | /t/warnings.t                    |
</span><span class='line'> | base                     | 0        | /t/lib/ExtraInheritedGroups.pm   |
</span><span class='line'> | base                     | 0        | /t/lib/NotHashBased.pm           |
</span><span class='line'> | base                     | 0        | /t/lib/SuperInheritedGroups.pm   |
</span><span class='line'> | base                     | 0        | /t/lib/BaseInheritedGroups.pm    |
</span><span class='line'> | base                     | 0        | /t/lib/AccessorGroups.pm         |
</span><span class='line'> | base                     | 0        | /t/lib/AccessorGroupsParent.pm   |
</span><span class='line'> | base                     | 0        | /t/lib/AccessorGroupsSubclass.pm |
</span><span class='line'> | base                     | 0        | /t/lib/AccessorGroupsComp.pm     |
</span><span class='line'> | base                     | 0        | /t/lib/AccessorGroupsRO.pm       |
</span><span class='line'> | base                     | 0        | /t/lib/AccessorGroupsWO.pm       |
</span><span class='line'> | base                     | 0        | /t/clean_namespace.t             |
</span><span class='line'> | constant                 | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | lib                      | 0        | /t/manifest.t                    |
</span><span class='line'> | lib                      | 0        | /t/pod_syntax.t                  |
</span><span class='line'> | lib                      | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | lib                      | 0        | /t/component.t                   |
</span><span class='line'> | lib                      | 0        | /t/warnings.t                    |
</span><span class='line'> | lib                      | 0        | /t/accessors.t                   |
</span><span class='line'> | lib                      | 0        | /t/accessors_wo.t                |
</span><span class='line'> | lib                      | 0        | /t/accessors_xs.t                |
</span><span class='line'> | lib                      | 0        | /t/pod_spelling.t                |
</span><span class='line'> | lib                      | 0        | /t/inherited.t                   |
</span><span class='line'> | lib                      | 0        | /t/accessors_ro.t                |
</span><span class='line'> | lib                      | 0        | /t/illegal_name.t                |
</span><span class='line'> | lib                      | 0        | /t/pod_coverage.t                |
</span><span class='line'> | lib                      | 0        | /t/strict.t                      |
</span><span class='line'> | lib                      | 0        | /t/accessors_pp.t                |
</span><span class='line'> | mro                      | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | strict                   | 0        | /t/pod_spelling.t                |
</span><span class='line'> | strict                   | 0        | /t/lib/ExtraInheritedGroups.pm   |
</span><span class='line'> | strict                   | 0        | /t/manifest.t                    |
</span><span class='line'> | strict                   | 0        | /t/accessors.t                   |
</span><span class='line'> | strict                   | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | strict                   | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | strict                   | 0        | /t/lib/AccessorGroupsComp.pm     |
</span><span class='line'> | strict                   | 0        | /t/accessors_pp.t                |
</span><span class='line'> | strict                   | 0        | /t/lib/SuperInheritedGroups.pm   |
</span><span class='line'> | strict                   | 0        | /t/basic.t                       |
</span><span class='line'> | strict                   | 0        | /t/pod_syntax.t                  |
</span><span class='line'> | strict                   | 0        | /t/clean_namespace.t             |
</span><span class='line'> | strict                   | 0        | /t/style_no_tabs.t               |
</span><span class='line'> | strict                   | 0        | /t/lib/AccessorGroupsWO.pm       |
</span><span class='line'> | strict                   | 0        | /t/warnings.t                    |
</span><span class='line'> | strict                   | 0        | /t/lib/AccessorGroupsRO.pm       |
</span><span class='line'> | strict                   | 0        | /t/component.t                   |
</span><span class='line'> | strict                   | 0        | /t/lib/NotHashBased.pm           |
</span><span class='line'> | strict                   | 0        | /t/inherited.t                   |
</span><span class='line'> | strict                   | 0        | /t/lib/BaseInheritedGroups.pm    |
</span><span class='line'> | strict                   | 0        | /t/lib/AccessorGroupsParent.pm   |
</span><span class='line'> | strict                   | 0        | /t/lib/AccessorGroups.pm         |
</span><span class='line'> | strict                   | 0        | /t/lib/AccessorGroupsSubclass.pm |
</span><span class='line'> | strict                   | 0        | /t/strict.t                      |
</span><span class='line'> | strict                   | 0        | /t/accessors_xs.t                |
</span><span class='line'> | strict                   | 0        | /t/accessors_wo.t                |
</span><span class='line'> | strict                   | 0        | /t/accessors_ro.t                |
</span><span class='line'> | strict                   | 0        | /t/illegal_name.t                |
</span><span class='line'> | strict                   | 0        | /t/pod_coverage.t                |
</span><span class='line'> | warnings                 | 0        | /t/warnings.t                    |
</span><span class='line'> | warnings                 | 0        | /t/illegal_name.t                |
</span><span class='line'> | warnings                 | 0        | /t/accessors.t                   |
</span><span class='line'> | warnings                 | 0        | /t/manifest.t                    |
</span><span class='line'> | warnings                 | 0        | /t/pod_syntax.t                  |
</span><span class='line'> | warnings                 | 0        | /t/accessors_xs_cachedwarn.t     |
</span><span class='line'> | warnings                 | 0        | /t/lib/NotHashBased.pm           |
</span><span class='line'> | warnings                 | 0        | /t/lib/SuperInheritedGroups.pm   |
</span><span class='line'> | warnings                 | 0        | /t/basic.t                       |
</span><span class='line'> | warnings                 | 0        | /t/lib/BaseInheritedGroups.pm    |
</span><span class='line'> | warnings                 | 0        | /t/style_no_tabs.t               |
</span><span class='line'> | warnings                 | 0        | /t/lib/AccessorGroupsRO.pm       |
</span><span class='line'> | warnings                 | 0        | /lib/Class/Accessor/Grouped.pm   |
</span><span class='line'> | warnings                 | 0        | /t/clean_namespace.t             |
</span><span class='line'> | warnings                 | 0        | /t/lib/AccessorGroupsComp.pm     |
</span><span class='line'> | warnings                 | 0        | /t/component.t                   |
</span><span class='line'> | warnings                 | 0        | /t/lib/AccessorGroupsWO.pm       |
</span><span class='line'> | warnings                 | 0        | /t/lib/AccessorGroups.pm         |
</span><span class='line'> | warnings                 | 0        | /t/lib/AccessorGroupsParent.pm   |
</span><span class='line'> | warnings                 | 0        | /t/lib/AccessorGroupsSubclass.pm |
</span><span class='line'> | warnings                 | 0        | /t/pod_spelling.t                |
</span><span class='line'> | warnings                 | 0        | /t/accessors_ro.t                |
</span><span class='line'> | warnings                 | 0        | /t/strict.t                      |
</span><span class='line'> | warnings                 | 0        | /t/accessors_pp.t                |
</span><span class='line'> | warnings                 | 0        | /t/lib/ExtraInheritedGroups.pm   |
</span><span class='line'> | warnings                 | 0        | /t/inherited.t                   |
</span><span class='line'> | warnings                 | 0        | /t/accessors_xs.t                |
</span><span class='line'> | warnings                 | 0        | /t/accessors_wo.t                |
</span><span class='line'> | warnings                 | 0        | /t/pod_coverage.t                |&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>NB: This is the only output format which displays the found version string at present.</p>

<p><code>__END__</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing App::Midgen v0.26]]></title>
    <link href="http://kevindawson.github.io/bowtie/2013/07/25/app-midgen-007/"/>
    <updated>2013-07-25T14:40:00+01:00</updated>
    <id>http://kevindawson.github.io/bowtie/2013/07/25/app-midgen-007</id>
    <content type="html"><![CDATA[<h2>So whatâ€™s new?</h2>

<ul>
<li>Added Two more output formats:

<ul>
<li>infile, output format, module v perl files they were Found in</li>
<li>metajson, output format META.json</li>
</ul>
</li>
<li>Internal scanner update and why</li>
<li>Finish off conversion to Type::Tiny</li>
</ul>


<!-- more -->


<p><em>Food for thought, if we update our Modules, don&rsquo;t we want our users to use the current version, so should we not by default do the same with others Modules. Thus we always show the current version number, regardless.</em></p>

<h3>Two new output formats:</h3>

<h4>infile</h4>

<p>The following was conceived to provided a solution to <a href="https://rt.cpan.org/Public/Bug/Display.html?id=76527">RT76527</a>.</p>

<p><code>midgen --format infile</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Output Format infile run against a test dist </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;hr /&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;hr /&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; | Bar                   | 0.2      | /lib/Anamal.pm     |
</span><span class='line'> | Carp::Always::Color   | 0        | /lib/Anamal.pm     |
</span><span class='line'> | Compiler::Lexer       | 0        | /lib/Anamal.pm     |
</span><span class='line'> | Data::Printer         | 0        | /lib/Anamal.pm     |
</span><span class='line'> | Foo                   | 0.123456 | /lib/Anamal.pm     |
</span><span class='line'> | Moo                   | 1.000    | /lib/Anamal.pm     |
</span><span class='line'> | Moo                   | 0.999    | /lib/Plugin/Dog.pm |
</span><span class='line'> | Moo                   | 0.888    | /lib/Plugin/Cat.pm |
</span><span class='line'> | Params::Util          | 0        | /lib/Anamal.pm     |
</span><span class='line'> | String::RewritePrefix | 0.005    | /lib/Anamal.pm     |
</span><span class='line'> | Test::Mock::LWP       | 0        | /t/666-tmw.t       |
</span><span class='line'> | Test::Mock::LWP       | 0        | /t/00.load.t       |
</span><span class='line'> | Test::More            | 0        | /t/pod.t           |
</span><span class='line'> | Test::More            | 0        | /t/pod-coverage.t  |
</span><span class='line'> | Test::More            | 0        | /t/666-tmw.t       |
</span><span class='line'> | Test::More            | 0        | /t/00.load.t       |
</span><span class='line'> | Test::Pod             | 0        | /t/pod.t           |
</span><span class='line'> | Test::Pod::Coverage   | 0        | /t/pod-coverage.t  |
</span><span class='line'> | Types::Standard       | 0        | /lib/Anamal.pm     |
</span><span class='line'> | X                     | 0        | /lib/Anamal.pm     |&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;hr /&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>NB: this is the only output format which displays the found version string, because it just makes sense in this instance.
Many thanks to ETHER along the way.</p>

<h4>metajson</h4>

<p>The following is what midgen thinks your <a href="https://metacpan.org/module/CPAN::Meta::Spec#Prereq-Spec">META.json</a> might contain based upon your dist, or in this case a test dist.</p>

<p><code>midgen --format metajson</code></p>

<p><img src="/images/007-metajson.png"></p>

<h3>Internal Scanner update</h3>

<p>These scanners enable midgen to identify <em>prereqs->test->suggests</em> from a <a href="https://metacpan.org/module/CPAN::Meta::Spec#Prereq-Spec">META.json</a> perspective.</p>

<p>Here is a <a href="/images/007-flow_chart.png">flow chart</a> that should help with why.</p>

<p>Many thanks to TOBYINK for his <a href="https://github.com/kevindawson/App-Midgen/issues/5">critique</a> which resulted in the following taking another step forward.</p>

<h4>Eval new scanner</h4>

<p>Eval is not realy a new scanner, it&rsquo;s just come of age with block support.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>A selection of what Eval supports </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">eval</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="k">use</span> <span class="nn">Test::Kwalitee::</span><span class="n">Extra</span> <span class="mf">0.000007</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;;</span>
</span><span class='line'><span class="nb">eval</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="k">use</span> <span class="n">Moo</span> <span class="mf">1.002</span><span class="p">;</span> <span class="mi">1</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;;</span>
</span><span class='line'><span class="nb">eval</span> <span class="p">{</span> <span class="nb">no</span> <span class="n">Moose</span><span class="p">;</span> <span class="mi">1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="nb">eval</span> <span class="p">{</span> <span class="nb">require</span> <span class="n">Moose</span> <span class="p">};</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$HAVE_MOOSE</span> <span class="o">=</span> <span class="nb">eval</span> <span class="p">{</span> <span class="nb">require</span> <span class="n">Moose</span><span class="p">;</span> <span class="mi">1</span><span class="p">;</span> <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>Test::Requires update</h4>

<p>Support for barewords in Test::Requires scanner
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Now supports barewords in Test::Requires </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="nn">Test::</span><span class="n">Requires</span> <span class="p">{</span> <span class="n">Moo</span> <span class="p">};</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Test::</span><span class="n">Requires</span> <span class="p">{</span> <span class="n">Moose</span> <span class="o">=&gt;</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mf">2.000</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Finish off conversion to Type::Tiny</h3>

<p>Why? one, so I can have a consistent Type system regardless of Moose or Moo, two, it&rsquo;s faster.
The Second part of the conversion from MooX::Types::MooseLike to Type::Tiny.</p>

<p>So we have gone from this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="nn">Moo::</span><span class="n">Role</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">MooX::Types::MooseLike::</span><span class="n">Base</span> <span class="sx">qw( InstanceOf )</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="nn">Types::</span><span class="n">Standard</span> <span class="sx">qw( InstanceOf )</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Moo::</span><span class="n">Role</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Many thanks to TOBYINK along the way.</p>

<p><code>__END__</code></p>
]]></content>
  </entry>
  
</feed>
